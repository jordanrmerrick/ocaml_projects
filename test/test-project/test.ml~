open Core
open Core_bench

let rec fib n =
  match n with
  | 0 -> 1
  | 1 -> 1
  | x -> fib (x-1) + fib (x-2)

let fast_fib n =
  let rec helper n prev pprev =
    match n with
    | 0 -> 1
    | 1 -> 1
    | x -> helper (x-1) (prev+pprev) prev
  in
  helper n 0 1

let () =
  Command.run (Bench.make_command [
    Bench.Test.create ~name:"empty"
      (fun () -> ());
    Bench.Test.create ~name:"fib 5"
      (fun () -> fib 5);
    Bench.Test.create ~name:"fib 10"
      (fun () -> fib 10);
    Bench.Test.create ~name:"fib 25"
      (fun () -> fib 25);
    Bench.Test.create ~name:"fast_fib 5"
      (fun () -> fast_fib 5);
    Bench.Test.create ~name:"fast_fib 10"
      (fun () -> fast_fib 10);
    Bench.Test.create ~name:"fast_fib 25"
      (fun () -> fast_fib 25);
    Bench.Test.create  ~name:"fast_fib 200"
      (fun () -> fast_fib 200)
  ])

let rec factorial n =
  match n with
  | 0 -> 0
  | 1 -> 1
  | x -> x * factorial (x-1)

let () = printf "%i\n" (factorial 10)
