(** @canonical Async_kernel.Async_condition *)
module Async_condition = Async_kernel__Async_condition

(** @canonical Async_kernel.Async_gc *)
module Async_gc = Async_kernel__Async_gc

(** @canonical Async_kernel.Async_invariant *)
module Async_invariant = Async_kernel__Async_invariant

(** @canonical Async_kernel.Async_invariant_intf *)
module Async_invariant_intf = Async_kernel__Async_invariant_intf

(** @canonical Async_kernel.Async_kernel_config *)
module Async_kernel_config = Async_kernel__Async_kernel_config

(** @canonical Async_kernel.Async_kernel_scheduler *)
module Async_kernel_scheduler = Async_kernel__Async_kernel_scheduler

(** @canonical Async_kernel.Async_stream *)
module Async_stream = Async_kernel__Async_stream

(** @canonical Async_kernel.Bvar *)
module Bvar = Async_kernel__Bvar

(** @canonical Async_kernel.Clock_intf *)
module Clock_intf = Async_kernel__Clock_intf

(** @canonical Async_kernel.Clock_ns *)
module Clock_ns = Async_kernel__Clock_ns

(** @canonical Async_kernel.Debug *)
module Debug = Async_kernel__Debug

(** @canonical Async_kernel.Deferred *)
module Deferred = Async_kernel__Deferred

(** @canonical Async_kernel.Deferred0 *)
module Deferred0 = Async_kernel__Deferred0

(** @canonical Async_kernel.Deferred1 *)
module Deferred1 = Async_kernel__Deferred1

(** @canonical Async_kernel.Deferred_array *)
module Deferred_array = Async_kernel__Deferred_array

(** @canonical Async_kernel.Deferred_list *)
module Deferred_list = Async_kernel__Deferred_list

(** @canonical Async_kernel.Deferred_map *)
module Deferred_map = Async_kernel__Deferred_map

(** @canonical Async_kernel.Deferred_memo *)
module Deferred_memo = Async_kernel__Deferred_memo

(** @canonical Async_kernel.Deferred_option *)
module Deferred_option = Async_kernel__Deferred_option

(** @canonical Async_kernel.Deferred_or_error *)
module Deferred_or_error = Async_kernel__Deferred_or_error

(** @canonical Async_kernel.Deferred_queue *)
module Deferred_queue = Async_kernel__Deferred_queue

(** @canonical Async_kernel.Deferred_result *)
module Deferred_result = Async_kernel__Deferred_result

(** @canonical Async_kernel.Deferred_sequence *)
module Deferred_sequence = Async_kernel__Deferred_sequence

(** @canonical Async_kernel.Deferred_std *)
module Deferred_std = Async_kernel__Deferred_std

(** @canonical Async_kernel.Execution_context *)
module Execution_context = Async_kernel__Execution_context

(** @canonical Async_kernel.External_job *)
module External_job = Async_kernel__External_job

(** @canonical Async_kernel.Import *)
module Import = Async_kernel__Import

(** @canonical Async_kernel.Ivar *)
module Ivar = Async_kernel__Ivar

(** @canonical Async_kernel.Ivar0 *)
module Ivar0 = Async_kernel__Ivar0

(** @canonical Async_kernel.Ivar_filler *)
module Ivar_filler = Async_kernel__Ivar_filler

(** @canonical Async_kernel.Job *)
module Job = Async_kernel__Job

(** @canonical Async_kernel.Job_or_event *)
module Job_or_event = Async_kernel__Job_or_event

(** @canonical Async_kernel.Job_or_event_intf *)
module Job_or_event_intf = Async_kernel__Job_or_event_intf

(** @canonical Async_kernel.Job_pool *)
module Job_pool = Async_kernel__Job_pool

(** @canonical Async_kernel.Job_queue *)
module Job_queue = Async_kernel__Job_queue

(** @canonical Async_kernel.Lazy_deferred *)
module Lazy_deferred = Async_kernel__Lazy_deferred

(** @canonical Async_kernel.Monad_sequence *)
module Monad_sequence = Async_kernel__Monad_sequence

(** @canonical Async_kernel.Monitor *)
module Monitor = Async_kernel__Monitor

(** @canonical Async_kernel.Monitor0 *)
module Monitor0 = Async_kernel__Monitor0

(** @canonical Async_kernel.Mvar *)
module Mvar = Async_kernel__Mvar

(** @canonical Async_kernel.Pipe *)
module Pipe = Async_kernel__Pipe

(** @canonical Async_kernel.Priority *)
module Priority = Async_kernel__Priority

(** @canonical Async_kernel.Require_explicit_time_source *)
module Require_explicit_time_source = Async_kernel__Require_explicit_time_source

(** @canonical Async_kernel.Scheduler *)
module Scheduler = Async_kernel__Scheduler

(** @canonical Async_kernel.Scheduler0 *)
module Scheduler0 = Async_kernel__Scheduler0

(** @canonical Async_kernel.Scheduler1 *)
module Scheduler1 = Async_kernel__Scheduler1

(** @canonical Async_kernel.Stack_or_counter *)
module Stack_or_counter = Async_kernel__Stack_or_counter

(** @canonical Async_kernel.Synchronous_time_source *)
module Synchronous_time_source = Async_kernel__Synchronous_time_source

(** @canonical Async_kernel.Synchronous_time_source0 *)
module Synchronous_time_source0 = Async_kernel__Synchronous_time_source0

(** @canonical Async_kernel.Tail *)
module Tail = Async_kernel__Tail

(** @canonical Async_kernel.Throttle *)
module Throttle = Async_kernel__Throttle

(** @canonical Async_kernel.Time_ns *)
module Time_ns = Async_kernel__Time_ns

(** @canonical Async_kernel.Time_source *)
module Time_source = Async_kernel__Time_source

(** @canonical Async_kernel.Time_source_intf *)
module Time_source_intf = Async_kernel__Time_source_intf

(** @canonical Async_kernel.Types *)
module Types = Async_kernel__Types
