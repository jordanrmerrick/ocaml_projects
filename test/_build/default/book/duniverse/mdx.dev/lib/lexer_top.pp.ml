# 1 "book/duniverse/mdx.dev/lib/lexer_top.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\001\000\000\000\253\255\002\000\255\255\251\255\003\000\
    \004\000\006\000\254\255\252\255\007\000\252\255\000\000\254\255\
    \008\000\001\000\009\000\255\255\010\000\253\255";
  Lexing.lex_backtrk =
   "\255\255\005\000\005\000\255\255\005\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\
    \001\000\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\007\000\255\255\000\000\007\000\000\000\000\000\007\000\
    \007\000\007\000\000\000\000\000\013\000\000\000\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\006\000\006\000\006\000\006\000\009\000\
    \010\000\016\000\018\000\018\000\021\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \011\000\019\000\000\000\002\000\000\000\000\000\009\000\000\000\
    \017\000\017\000\000\000\000\000\000\000\000\000\004\000\000\000\
    \008\000\000\000\009\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\006\000\006\000\006\000\006\000\000\000\010\000\015\000\
    \000\000\000\000\021\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\001\000\004\000\007\000\008\000\009\000\
    \009\000\012\000\016\000\018\000\020\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\017\000\255\255\000\000\255\255\255\255\009\000\255\255\
    \016\000\018\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \004\000\255\255\008\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\014\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\012\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\001\000\004\000\007\000\008\000\255\255\009\000\012\000\
    \255\255\255\255\020\000";
  Lexing.lex_base_code =
   "\000\000\001\000\000\000\000\000\002\000\000\000\004\000\003\000\
    \004\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_backtrk_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_default_code =
   "\001\000\001\000\000\000\000\000\001\000\000\000\000\000\001\000\
    \001\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check_code =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\001\000\004\000\007\000\008\000\009\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\001\000\004\000\007\000\008\000\009\000";
  Lexing.lex_code =
   "\255\001\255\255\000\001\255";
}

let rec token lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1); __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->

# 5 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 
# 5 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 ( [] )

# 176 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 177 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 1 ->

# 6 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 
# 6 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 ( `Ellipsis :: token lexbuf )

# 181 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 182 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 2 ->

# 7 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 
# 7 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 ( `Output "" :: token lexbuf )

# 186 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 187 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 3 ->

# 8 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 
# 8 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 ( let c = phrase [] (Buffer.create 8) lexbuf in
                   `Command c :: token lexbuf )

# 192 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 193 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 4 ->
let

# 10 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                            
# 10 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                            str

# 198 "book/duniverse/mdx.dev/lib/lexer_top.ml"
# 198 "book/duniverse/mdx.dev/lib/lexer_top.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0) in

# 11 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 
# 11 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 ( `Output str :: token lexbuf )

# 202 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 203 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 5 ->
let

# 12 "book/duniverse/mdx.dev/lib/lexer_top.mll"
        
# 12 "book/duniverse/mdx.dev/lib/lexer_top.mll"
        c

# 208 "book/duniverse/mdx.dev/lib/lexer_top.ml"
# 208 "book/duniverse/mdx.dev/lib/lexer_top.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in

# 12 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 
# 12 "book/duniverse/mdx.dev/lib/lexer_top.mll"
                 ( failwith (Printf.sprintf "unexpected character '%c'. Did you forget a space after the '#' at the start of the line?" c) )

# 212 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 213 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and phrase acc buf lexbuf =
   __ocaml_lex_phrase_rec acc buf lexbuf 12
and __ocaml_lex_phrase_rec acc buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let

# 15 "book/duniverse/mdx.dev/lib/lexer_top.mll"
              
# 15 "book/duniverse/mdx.dev/lib/lexer_top.mll"
              nl

# 225 "book/duniverse/mdx.dev/lib/lexer_top.ml"
# 225 "book/duniverse/mdx.dev/lib/lexer_top.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -3) in

# 16 "book/duniverse/mdx.dev/lib/lexer_top.mll"
      
# 16 "book/duniverse/mdx.dev/lib/lexer_top.mll"
      ( Lexing.new_line lexbuf;
        let nl = Compat.List.init (String.length nl) (fun _ -> "") in
        phrase (nl @ Buffer.contents buf :: acc) (Buffer.create 8) lexbuf )

# 231 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 232 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 1 ->

# 20 "book/duniverse/mdx.dev/lib/lexer_top.mll"
      
# 20 "book/duniverse/mdx.dev/lib/lexer_top.mll"
      ( Lexing.new_line lexbuf;
        List.rev (Buffer.contents buf :: acc) )

# 237 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 238 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 2 ->

# 22 "book/duniverse/mdx.dev/lib/lexer_top.mll"
            
# 22 "book/duniverse/mdx.dev/lib/lexer_top.mll"
            ( List.rev ((Buffer.contents buf ^ ";;") :: acc) )

# 242 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 243 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | 3 ->
let

# 23 "book/duniverse/mdx.dev/lib/lexer_top.mll"
        
# 23 "book/duniverse/mdx.dev/lib/lexer_top.mll"
        c

# 248 "book/duniverse/mdx.dev/lib/lexer_top.ml"
# 248 "book/duniverse/mdx.dev/lib/lexer_top.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in

# 23 "book/duniverse/mdx.dev/lib/lexer_top.mll"
            
# 23 "book/duniverse/mdx.dev/lib/lexer_top.mll"
            ( Buffer.add_char buf c; phrase acc buf lexbuf )

# 252 "book/duniverse/mdx.dev/lib/lexer_top.ml"

  
# 253 "book/duniverse/mdx.dev/lib/lexer_top.ml"
  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_phrase_rec acc buf lexbuf __ocaml_lex_state

;;


# 25 "book/duniverse/mdx.dev/lib/lexer_top.mll"
 
# 26 "book/duniverse/mdx.dev/lib/lexer_top.mll"
let token lexbuf =
  try token lexbuf
  with Failure e -> Misc.err lexbuf "incomplete toplevel entry: %s" e


# 265 "book/duniverse/mdx.dev/lib/lexer_top.ml"
